name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/checkout@v3
      name: Cache pip dependencies
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: |
        python manage.py migrate
    - name: Create superuser
      run: |
        python manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'adminpass')"  


  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      max-parallel: 1
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: '3.9'
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        verbose: true


  # coverage:
  #   needs: test
  #   name: coverage
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - uses: actions/setup-node@master
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - run: python -m pip install --upgrade pip
  #   - run: pip install -r requirements.txt
  #   - name: Test & publish code coverage
  #     uses: paambaati/codeclimate-action@v3.2.0
  #     env:
  #       CC_TEST_REPORTER_ID: 99907a756a182e45fefdf3bbc35bfdc2603aba547adc59c689a33010cb501e77
  #     with:
  #       coverageCommand: coverage report

  # heroku_git_deploy_job:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   name: deploy django app to heroku
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: akhileshns/heroku-deploy@v3.12.13 # This is the action
  #       with:
  #         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
  #         heroku_app_name: "djangogithubactions" #Must be unique in Heroku
  #         heroku_email: "dserbenyukgood@gmail.com"
